#tworzenie planszy
plansza=[]
for x in (0..10)
  plansza.push([])
  for y in(0..10)
    plansza[x].push(y)
  end
end

def render(obiekty,punkty)
  puts "punkty: " + punkty.to_s
  for x in (0..10)
    for y in(0..10)
      obiekty.each do |obiekt|
        if(obiekt[1]==x && obiekt[2]==y)
          print obiekt[0] + ""
        else
          print " "
        end
      end
    end
    puts
  end
  draw_hp(obiekty[0][3])
  puts "W-up, S-down, A-left, D-right, R-rest(heal 1hp), Q-quit"
end
#tworzenie obiektow na planszy ["typ",x,y,hp] typy= P-gracz M-potwor S-skarb
obiekty=[["P",5,5,10],["M",3,2,5]]

def draw_hp(hp)
  i=0
  while(i<hp)
    print "â–Œ "
    i+=1
  end
  puts
end
def onCollision(obj1,obj2)
  if(obj1[1]==obj2[1] && obj1[2]==obj2[2])
    return true
  else
    return false
  end
end
#punkty gracza zdobywane 2 za zabicie potwora 1 za skarb
punkty=0
#poczatkowy render
render(obiekty,punkty)
action=""
while(action!="Q" && action != "q")#jesli akcja nie jest zamknieciem wywoluj petle
  action = gets.chomp#czekaj na znak
  case action
    when "w","W"#up
      obiekty[0][1] -= 1
    when "s","S"#down
      obiekty[0][1] += 1
    when "a","A"#left
      obiekty[0][2] -= 1
    when "d","D"#right
      obiekty[0][2] += 1
    when "r","R"#rest
      obiekty[0][3] += obiekty[0][3] <10 ? 1 : 0
  end

  obiekty.each do |obj|#sprawdzaj kolizje
    if obj[0][0]!="P"
      if onCollision(obiekty[0],obj)#w wypadku zderzenia sie
        case obj[0]
          when "M"#z potworem
            punkty+=2
            obiekty[0][3] -=1
          when "S"#ze skarbem
            punkty+=1
        end
        obiekty.delete(obj)#usun danyb obiekt
      end
    end
  end
  render(obiekty,punkty)#rysuj zaktualizowana plansze
end
